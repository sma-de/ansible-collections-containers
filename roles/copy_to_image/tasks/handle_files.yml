---

  - name: >-
      check that source '{{ _cpimg_files_iter.value.src_rel }}'
      exists  ==>>  {{ copy_to_image_args_normed.image_id }}
    ansible.builtin.stat:
      path: "{{ _cpimg_files_iter.value.src }}"
    become: no
    delegate_to: localhost
    register: _result
    failed_when: 
      - not _result.stat.exists

  - set_fact:
      src_is_dir: "{{ _result.stat.isdir }}"


  - block:

      - name: >-
          current source is link, check where it points
          to  ==>>  {{ copy_to_image_args_normed.image_id }}
        ansible.builtin.stat:
          path: "{{ _result.stat.lnk_source }}"
        become: no
        delegate_to: localhost
        register: _tmp_lnkcheck

      - set_fact:
          src_is_dir: "{{ _tmp_lnkcheck.stat.isdir }}"

    when: _result.stat.islnk


    ##
    ## note: strangely enough, copy file to file only works when all
    ##   parent dir's pre exist and cannot be tweaked to handle dir
    ##   creation internally (but it works when it is used for copying
    ##   directories), so we do it ourselves here "manually"
    ##
  - name: assure parent dir exists on remote
    ansible.builtin.file:
      state: directory
      path: "{{ _cpimg_files_iter.value.copy_api.dest | dirname }}"
      owner: "{{ _cpimg_files_iter.value.copy_api.owner | default(omit) }}"
      group: "{{ _cpimg_files_iter.value.copy_api.group | default(omit) }}"
      mode: >-
        {{ _cpimg_files_iter.value.copy_api.directory_mode | default(omit) }}


  - name: >-
      copy file '{{ _cpimg_files_iter.value.src_rel }}' to
      image  ==>>  {{ copy_to_image_args_normed.image_id }}
    ansible.builtin.copy: "{{ _cpimg_files_iter.value.copy_api }}"
    when: not src_is_dir


    ##
    ## note: in principle builtin.copy is capable of also copying dirs
    ##   recursively, but its capability for this is a bit lacking, it
    ##   struggles when the number of files get big and there is also no
    ##   possibility to define excludes or similar, for that reason we
    ##   use rsync (wrapper) for dir copy
    ##
  - block:

      - block:

          - name: test if rsync is already avaible on target
            ansible.builtin.command:
              argv:
                - rsync
                - "--version"
            register: _tmp_check_rsync
            failed_when: >-
              _tmp_check_rsync.rc != 0 and _tmp_check_rsync.rc != 2


          - name: rsync needs to be installed on target too, so make sure this is the case
            ansible.builtin.include_role:
              name: smabot.base.os_packages
            vars:
              smabot_base_os_packages_args:
                packages:
                  default:
                    rsync:
            when: _tmp_check_rsync.rc != 0

          - set_fact:
              _copy_packages: >-
                {{ _copy_packages | combine({
                     'rsync': {'name': 'rsync',
                        'pre_installed': _tmp_check_rsync.rc == 0,
                     }
                  }) }}

        when: not _copy_packages.get('rsync', False)


      - name: >-
          copy dir '{{ _cpimg_files_iter.value.src_rel }}' to
          image  ==>>  {{ copy_to_image_args_normed.image_id }}
        ansible.posix.synchronize: "{{ _cpimg_files_iter.value.dir_opts.config }}"


        ## optionally handle user/group owner (atm not possible to do this directly with synch)

      - name: ensure copied files and dirs ars owned by correct user
        ansible.builtin.command:
          argv:
            - chown
            - '-R'
            - "{{ _cpimg_files_iter.value.copy_api.owner }}"
            - "{{ _cpimg_files_iter.value.dir_opts.config.dest }}"
        changed_when: false
        when: >-
          _cpimg_files_iter.value.copy_api.owner | default(False)

      - name: ensure copied files and dirs ars owned by correct group
        ansible.builtin.command:
          argv:
            - chgrp
            - '-R'
            - "{{ _cpimg_files_iter.value.copy_api.group }}"
            - "{{ _cpimg_files_iter.value.dir_opts.config.dest }}"
        changed_when: false
        when: >-
          _cpimg_files_iter.value.copy_api.group | default(False)


    when: src_is_dir

