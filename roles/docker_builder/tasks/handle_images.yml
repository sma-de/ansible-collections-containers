---

  - set_fact:
       _auto_versions: [{'latest': True}]
       _cur_image_meta: {}
       _cur_image_deco: "{{ _dbimg_iter.value.decorations }}"

       _cur_image_labels: >-
          {{ _dbimg_iter.value.docker_labels | default({}, True) }}

       _cur_image_env: >-
          {{ {} | smabot.containers.append_contenv(
               new_vars=(_dbimg_iter.value.environment.static
                 | default({}, True)
               ) 
             )
           | smabot.containers.append_contenv(
               new_vars=(_dbimg_iter.value.proxy.vars | default(None))
             )
          }}


    ##
    ## optionally handle auto versioning
    ##
  - block:

      - set_fact:
           _auto_versions: []
           _tmp_in_versions: []
           _tmp_scm_timestamp: ''


      - include_tasks: >-
          auto_versioning/methods/{{ 
            _dbimg_iter.value.auto_versioning.method_type }}.yml


      - ansible.builtin.assert:
          that:
            - _tmp_in_versions
          fail_msg: >-
            Auto-Versioning method of type
            {{ _dbimg_iter.value.auto_versioning.method_type }}
            failed to determine a single in-version.


        ##
        ## note: this expects auto-versioning methods to return
        ##   versions sorted from new to old
        ##
      - name: >-
          of all found potential auto versions take the last {{ dbimg_iter.value.auto_versioning.method_args.vercnt_max }}
        set_fact:
          _tmp_in_versions: >-
            {{ _tmp_in_versions[:_dbimg_iter.value.auto_versioning.method_args.vercnt_max] }}
        when: _dbimg_iter.value.auto_versioning.method_args.vercnt_max > 0


      - block:

           # TODO: support other scm types
           # TODO: support passing scm stuff from "outside"

          - debug:
              msg: Get timestamp from scm for auto version

          - include_tasks: auto_versioning/scm/git.yml
            when: _dbimg_iter.value.auto_versioning.scm_based.type == 'git'

          - ansible.builtin.assert:
              that:
                - _tmp_scm_timestamp
              fail_msg: >-
                Auto-Versioning failed to obtain the current scm
                timestamp from type
                '{{ _dbimg_iter.value.auto_versioning.scm_based.type }}'

        when: _dbimg_iter.value.auto_versioning.scm_based


      - include_tasks: auto_versioning/common_post.yml
        loop: "{{ _tmp_in_versions }}"
        loop_control:
          loop_var: _autovcfg_iter
          index_var: _autovcfg_index

    when: _dbimg_iter.value.get('auto_versioning', False)


    ##
    ## do the image (for each auto version)
    ##
  - include_tasks: handle_image.yml
    loop: "{{ _auto_versions }}"
    loop_control:
      loop_var: _autovcfg_iter


  - name: record current image meta infos
    set_fact:
      _docker_build_meta: >-
        {{ _docker_build_meta | combine(
            {'images': {_dbimg_iter.value.fullname: _cur_image_meta}},
            recursive=True, list_merge='append'
          )
        }}

    when: docker_build.meta.create

