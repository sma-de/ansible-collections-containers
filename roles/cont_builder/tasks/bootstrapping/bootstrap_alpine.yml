---

  - name: test if OS is alpine
    ansible.builtin.raw: apk --version
    register: _tmp_raw_res
    failed_when: false


  - block:

      - set_fact:
          _tmp_bootstrapper: alpine
          _tmp_critical_core_packages:


      - block:

          - set_fact:
              _tmp_critical_core_packages:
                ## obviously as ansible is python based we need an interpreter installed
                python3:

                ## needed for recent versions of pip for pip to work at all
                py3-packaging:


          ##
          ## ansible will need python, and since it isn't there
          ## we can only use the special raw mode
          ##
          ## note: environment does not work for raw (also not when
          ##   executable is set explicitly as the docu says), so
          ##   we musst pass important settings here differently
          ##
          - name: install python and other core dependencies
            ansible.builtin.raw: >-
              {{ _tmp_bootstrap_env | smabot.base.kvlist | join(' ') }}
              apk add --no-cache {{
                _tmp_critical_core_packages | dict2items
                | map(attribute='key') | join(' ')
              }}

        when: _tmp_py_installed.rc != 0


      - block:

            ##
            ## note: if a python interpreter is already pre-installed,
            ##   there is a good chance this was not done using system
            ##   package manager, meaning we also cannot use system
            ##   package manager to install critical core dependencies
            ##
          - name: install core dependencies
            ansible.builtin.raw: >-
              {{ _tmp_bootstrap_env | smabot.base.kvlist | join(' ') }}
              python3 -m pip install --root-user-action packaging

        when: _tmp_py_installed.rc == 0

    when: _tmp_raw_res.rc == 0

