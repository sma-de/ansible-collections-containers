---

  - name: create temp work dir
    ansible.builtin.tempfile:
      state: directory
    register: _tmpdir_stats


  - name: checkout repo to tmpdir
    ansible.builtin.git:
      repo: "{{ _iter_packinst.srcurl }}"
      dest: "{{ _tmpdir_stats.path }}"
      version: "{{ _iter_packinst.version | default(omit, True) }}"


    # optionally handle repo requirements file when it exists
  - set_fact:
      reqfile_path: >-
        {{ (_tmpdir_stats.path, _iter_packinst.requirements_file)
         | path_join }}


  - name: check if repo contains a requirements file
    ansible.builtin.stat:
      path: "{{ reqfile_path }}"
    register: _tmp_stat


  - name: make sure all python requirements are fullfilled
    ansible.builtin.pip:
      requirements: "{{ reqfile_path }}"
    when: _tmp_stat.stat.exists


  - name: run python install for source repo
    ansible.builtin.command:
      chdir: "{{ _tmpdir_stats.path }}"
      argv:
        - >-
          {{ ansible_python_interpreter
           | default(ansible_facts.python.executable, True) }}
        - setup.py
        - install


  - name: cleanup temp workdir
    ansible.builtin.file:
      path: "{{ _tmpdir_stats.path }}"
      state: absent

