---

    ##
    ## note: we need this evil looking flag to avoid the
    ##   externally-managed-environment error newer python versions
    ##   throw which is intendend to guard against overwriting os
    ##   packager managed python installations including its libs
    ##   to be changed / manipulated directly by pip, in the most
    ##   general cases this is probably a really good thing to do,
    ##   but for our docker/container case it is still okay-ish
    ##   to do it like the old times
    ##
  - set_fact:
      _tmp_extra_args: >-
        --break-system-packages


    ## TODO: handle older alpine version which do not support system-packages break flag
  - set_fact:
      _tmp_extra_args:
    when: >-
      (ansible_distribution == "Ubuntu"
      and (ansible_distribution_major_version | int) < 20)
      or (ansible_distribution == "Debian"
      and (ansible_distribution_major_version | int) < 12)


    ##
    ## TODO: technically it would be cleaner to remove this again at the end, but is it really worth the effort??
    ##
  - name: >-
      make sure target system is prepared for maven module
       ==>>  {{ _cur_dockimg.fullname }}
    ansible.builtin.pip:
      name: lxml

      extra_args: >-
        {{ _tmp_extra_args }}


  - name: >-
      get maven artifact '{{ _iter_packinst.name }}'
       ==>>  {{ _cur_dockimg.fullname }}
    community.general.maven_artifact: "{{ _iter_packinst.config }}"
    register: _tmp_last_mvn_artifact_status


    ## if provided compare checksums given by pkg cfg
  - include_tasks: do_checksums.yml
    loop: >-
      {{ _iter_packinst.checksums | dict2items() }}
    loop_control:
      loop_var: _checksums_iter
    vars:
      checksum_params:
        default_file: "{{ _tmp_last_mvn_artifact_status.dest }}"


    ## handle unpacking when requested
  - include_tasks: handle_unpacking.yml
    when: _iter_packinst.destination.unpacking


    ## if downloaded maven artifact is actually a
    ## installer optionally run it (only when no unpacking is
    ## involved as unpacking already calls post_installer internally)
  - include_tasks: post_installer.yml
    vars:
      mvn_artifact_dlpath: "{{ _tmp_last_mvn_artifact_status.dest }}"
    when: >-
      not _iter_packinst.destination.unpacking
      and _iter_packinst.destination.install

