---

##
## this method is based on this:
##   -> https://github.com/mathworks-ref-arch/matlab-dockerfile/tree/main/alternates/building-on-matlab-docker-image
##

## TODO: support absent state???
## TODO: support giving explicit version state???

  - set_fact:
      _tmp_valid_cfg:
        states:
          - latest
          - present
          - foo


  - name: check if given package config is valid
    ansible.builtin.assert:
      that:
        - >-
          not _iter_packinst.get('state', None) or
          _iter_packinst.state in _tmp_valid_cfg.states
      fail_msg: |-
        Currently only the following package states are supported:
          {{ _tmp_valid_cfg.states }}


  ## TODO: in auto install active case, check if mpm binary is already installed, if not auto-installed

## && EXISTING_MATLAB_LOCATION=$(dirname $(dirname $(readlink -f $(which matlab)))) \
##     && sudo HOME=${HOME} ./mpm install \
##         --destination=${EXISTING_MATLAB_LOCATION} \
##         --release=${MATLAB_RELEASE} \
##         --products ${ADDITIONAL_PRODUCTS} \
##     || (echo "MPM Installation Failure. See below for more information:" && cat /tmp/mathworks_root.log && false) \
##     && sudo rm -rf mpm /tmp/mathworks_root.log


  - name: get path to matlab binary
    smabot.base.command_which:
      cmd: matlab
    register: _tmp_modres_which_mlab


  - name: ensure matlab binary is accessable
    ansible.builtin.assert:
      that:
        - _tmp_modres_which_mlab.abspath is truthy
      fail_msg: >-
        matlab binary is either not installed or at least not
        accessable as executable on $PATH


  - name: get path to mpm binary
    smabot.base.command_which:
      cmd: mpm
    register: _tmp_modres_which_mpm


  - name: ensure mpm binary is accessable
    ansible.builtin.assert:
      that:
        - _tmp_modres_which_mpm.abspath is truthy
      fail_msg: >-
        matlab package manager mpm is either not installed or at
        least not accessable as executable on $PATH
    when: >-
      (_iter_packinst.mpm.auto_install | default(False)) is falsy


  - name: auto-install mpm package manager
    ansible.builtin.get_url: "{{ _iter_packinst.mpm.auto_install.config }}"
##      url: http://example.com/path/file.conf
##      dest: /etc/foo.conf
##      mode: '0440'
    when: >-
       (_iter_packinst.mpm.auto_install | default(False)) is truthy
       and _tmp_modres_which_mpm.abspath is falsy

##      url: https://www.mathworks.com/mpm/glnxa64/mpm
##      dest: /usr/local/bin/mpm
##      mode: '0775'


    ## note: we need to know the home dir here of the final image matlab user
  - name: get home dir of matlab image user
    ansible.builtin.shell: >-
      getent passwd '{{ _cur_dockimg.docker_user.real }}' | cut -d: -f6
    register: _tmp_modres_usrhome


  - set_fact:
      _tmp_modinst_cfg:
        mlab_loc: >-
          {{ _iter_packinst.matlab_location
           | default((_tmp_modres_which_mlab.linksrc
                 | default(_tmp_modres_which_mlab.abspath, True)
               ) | dirname | dirname, True
             )
          }}

        ## TODO: default should be from autover
        mlab_ver: r2025a

        products: >-
          {{ _iter_packinst.name | join(' ') }}


  - name: run matlab package installer
    ansible.builtin.shell:
      cmd: |
        set +e

        ## TODO: overridable
        ##mlab_loc=$(dirname $(dirname $(readlink -f $(which matlab))))
        export HOME='{{ _tmp_modres_usrhome.stdout_lines | first }}'

        mpm install --destination='{{ _tmp_modinst_cfg.mlab_loc }}' \
          --release='{{ _tmp_modinst_cfg.mlab_ver }}' \
          --products '{{ _tmp_modinst_cfg.products }}'

        rc="$?"

        if [ "$rc" -ne 0 ]; then
          echo "Installing matlab packages failed, install log:" >&2
          sudo cat "${mpm_dir}/mathworks_root.log" >&2

          exit "$rc"
        fi

        rm -rf "${mpm_dir}/mathworks_root.log"


  ## TODO: if mpm was auto-installed and not keeping it was explicitly requested, remove it again

