---

  - set_fact:
      _tmp_pinst_handled: true


  - include_tasks: alienarch_debian.yml
    loop: "{{ _cur_dockimg.packages.distro.foreign_architectures }}"
    loop_control:
      loop_var: _iter_pack_alienarchs


    ##
    ## notes for os defaults:
    ##
    ##   update_cache == true 
    ##      -> normally apt-get update is always necessary before install
    ##
    ##   install_recommends == false
    ##      -> be explicit here on default and dont install 
    ##         more than what was asked for
    ##
  - include_tasks: pinst_debian_pinst.yml
    loop: >-
      {{ _cur_dockimg.packages.distro 
       | smabot.containers.to_psets(os_defaults={
           'update_cache': True,
           'install_recommends': False,
         }, **_tmp_pset_extra_args)
      }}
    loop_control:
      loop_var: _iter_packinst
    vars:
      ansible_python_interpreter: >-
        {{ _os_py_extra_vars.ansible_python_interpreter }}


  - name: >-
      remove (eventually only temporary) buggy custom apt
      sources so build can run through without errors
    ansible.builtin.file:
      path: >-
        {{ '/etc/apt/sources.list.d/'
         ~ smabot_base_custom_apt_sources_args_normed.sources[_iter_bad_sources.key].apt_file
         ~ '.list'
        }}
      state: absent
    loop: >-
      {{ _cur_dockimg.packages.distro._export_cfgs.sources.bad_sources | dict2items }}
    loop_control:
      loop_var: _iter_bad_sources
    when: >-
      (_cur_dockimg.packages.distro._export_cfgs.sources.bad_sources | default(False))
      is truthy

