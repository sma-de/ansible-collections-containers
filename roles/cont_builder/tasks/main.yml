---

##
## the actual build steps inside the container to create,
## default context is execed into container to build
##

  - block:

      - set_fact:
          _bcon_name: "{{ ansible_host }}"
          smabot_containers_docker_builder_role_path: "{{ role_path }}"
          _my_cfgref: >-
             {{ hostvars.localhost._contbuild_hosts[ansible_host] }}

      - include_tasks: build_prepare.yml

      - name: container build steps
        block:
          - include_tasks: build_steps.yml

        ##
        ## make at least part of final image environment also avaible
        ## during build phase, this is important for stuff like proxies
        ##
        ## note: environment seems to use actually a direct reference
        ##   of the passed dict (not a copy of it), which means if we
        ##   update this dict later during build these envvars are
        ##   immediately avaible for following module calls, which
        ##   than means we dont need extra nested blocks every time
        ##   we update environment variables
        ##
        environment: >-
          {{ _cur_image_env.vars }}


##
## finally for committing and pushing we switch back to docker host / ansible controller
##

      - name: post build steps
        block:
          - include_tasks: post_steps.yml
        delegate_to: localhost

    always:

        ##
        ## ensure build container is always cleaned up, also when building
        ## failed except explicitly requested otherwise
        ##
      - name: remove build container for  ==>>  {{ _cur_dockimg.fullname }}
        community.docker.docker_container:
          name: "{{ _bcon_name }}"
          state: absent
        when: not (docker_build_keep_buildcon | default(False))
        delegate_to: localhost

        ##
        ## sometimes this cleanup is unrealiable for some reason try
        ## to mitigate this with automatic retries
        ##
        retries: 3


##   - include_role: 
##       name: hashicorp_vault_sma_login
## 
##     ## TODO: use a lookup here instead
##   - block:
## 
##       - hashivault_read:
##           mount_point: secrets/kv2/sma/manual/default
##           secret: accounts/adservice/svc.integrity/pw
##           key: usr
##           version: 2
##         register: _dacc_usr
## 
##       - hashivault_read:
##           mount_point: secrets/kv2/sma/manual/default
##           secret: accounts/adservice/svc.integrity/pw
##           key: pw
##           version: 2
##         register: _dacc_pw
## 
##     environment:
##       VAULT_TOKEN: "{{ awxcred_hashivault_token }}"


##   - name: docker registry login
##     docker_login:
##       registry: "repositories.developer.sunnyportal.com:5000"
##       username: "{{ _dacc_usr.value }}"
##       password: "{{ _dacc_pw.value }}"
##       reauthorize: yes
## 
## ## TODO: for some reason this always fails with useless error message unknown:unknown
## ## TODO: maybe do this in the working jenkins context
## ##  - name: tag and push to registry  ==>>  {{ _cur_dockimg.fullname }}
## ##    docker_image:
## ##      name: "{{ _cur_dockimg.fullname }}"
## ##      repository: "repositories.developer.sunnyportal.com:5000/{{ _cur_dockimg.fullname }}"
## ##      ##tag: 7
## ##      force_tag: yes # might be necessary to overwrite existing images
## ##      push: yes
## ##      source: local
## 
## 
##   - name: docker registry logout
##     docker_login:
##       state: absent

